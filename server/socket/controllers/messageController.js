const { random } = require('lodash');

module.exports = {
  getCorrectAnswers: (messagePosition = 1) => {
    switch (messagePosition) {
      case 1:
        return ['–æ–∫', '–¥–∞', '–∫–æ–Ω–µ—á–Ω–æ', '—Å–ø—Ä–∞—à–∏–≤–∞–π', '–µ—Å—Ç—å', '–∫–∞–∫–∞—è'];
      case 2:
        return ['–ø–æ–¥–æ–∂–¥–∏—Ç–µ', '–Ω–µ –ø–æ–º–Ω—é', '–≥–¥–µ', '–Ω–∞–ø–∏—à–∏—Ç–µ', '–∫–∞–∫–æ–π', '—Å—á–µ—Ç–∞'];
    }
  },

  getRandomMessage: (messageScenarioType = '') => {
    switch (messageScenarioType) {
      case 'problem':
        return {
          isClient: true,
          type: 'message',
          message: [
            '–í –æ–±—â–µ–º –ø—Ä–æ–±–ª–µ–º–∞ —Ç–∞–∫–∞—è, –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –Ω–∞ —Å–∫–æ–ª—å–∫–æ —è –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –ø–æ–µ–ª –≤ –º–∞–∫–µ..',
            '–ï—Å—Ç—å –æ–¥–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∫–∞. –ù–µ–¥–∞–≤–Ω–æ –ø–æ–µ–ª –≤ –º–∞–∫–¥–æ–Ω–∞–ª—å–¥—Å–µ, –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏—é –≤ –∏—Å—Ç–æ—Ä–∏–∏',
            '–î–µ–ª–æ –≤–æ—Ç –≤ —á–µ–º: –î–∞–≤–µ—á–∞ –ø–æ–µ–ª –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ –ú–∞–∫–¥–æ–Ω–∞–ª—å–¥—Å, –∞ –≤ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è, –≤–∏–¥–∏–º–æ —É–¥–∞–ª–∏–ª, —è –º–æ–≥—É –≥–¥–µ-—Ç–æ —É–≤–∏–¥–µ—Ç—å —ç—Ç—É –æ–ø–µ—Ä–∞—Ü–∏—é?'
          ][random(0, 2)],
          timestamp: (new Date().getTime() / 1000) | 0
        };
      case 'wrong':
        return {
          isClient: true,
          type: 'message',
          message: [
            '–ù–µ, —ç—Ç–æ —á–µ-—Ç–æ –Ω–µ —Ç–æ. –¢—É—Ç –Ω–∏–≥–¥–µ –Ω–µ —Å–∫–∞–∑–∞–Ω–æ –ø—Ä–æ –º–∞–∫–¥–∞–∫.',
            '–Ø –Ω–µ —ç—Ç–æ –∏–º–µ–ª –≤–≤–∏–¥—É',
            '–Ø –∂–¥–∞–ª –¥—Ä—É–≥–æ–≥–æ –æ—Ç–≤–µ—Ç–∞.'
          ][random(0, 2)],
          timestamp: (new Date().getTime() / 1000) | 0
        };
      case 'correct':
        return {
          isClient: true,
          type: 'message',
          message: [
            '–¢–æ, —á—Ç–æ –Ω–∞–¥–æ, —Å–ø–∞—Å–∏–±–æ!',
            '–û–≥–æ, —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å üòé',
            '–°–ø–∞—Å–∏–±–æ, —ç—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–æ, —á—Ç–æ –º–Ω–µ –±—ã–ª–æ –Ω—É–∂–Ω–æ üò±'
          ][random(0, 2)],
          timestamp: (new Date().getTime() / 1000) | 0
        };
      case 'incorrectMessage':
        return {
          isClient: true,
          type: 'message',
          message: [
            '–ú–æ–∂–µ—Ç –±—ã—Ç—å —É –≤–∞—Å –ø—Ä–æ—Å—Ç–æ –≥–¥–µ-—Ç–æ –µ—Å—Ç—å –∏—Å—Ç–æ—Ä–∏—è –º–æ–∏—Ö —Å—á–µ—Ç–æ–≤?',
            '–ú–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã –º–æ–∂–µ—Ç–µ —Ç–∞–º —Å–∞–º–∏ —É —Å–µ–±—è –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å?',
            '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —É —Å–µ–±—è, –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø–∏—Å–∏ –≥–¥–µ-—Ç–æ –æ—Å—Ç–∞–ª–∏—Å—å..'
          ][random(0, 2)],
          timestamp: (new Date().getTime() / 1000) | 0
        };
    }
  }
};
